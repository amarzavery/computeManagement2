/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetSkuCapacity class.
 * @constructor
 * Describes scaling information of a sku.
 * @member {number} [minimum] Gets the minimum capacity.
 * 
 * @member {number} [maximum] Gets the maximum capacity that can be set.
 * 
 * @member {number} [defaultCapacity] Gets the default capacity.
 * 
 * @member {string} [scaleType] Gets the scale type applicable to the sku.
 * Possible values for this property include: 'Automatic', 'None'.
 * 
 */
function VirtualMachineScaleSetSkuCapacity(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.minimum !== undefined) {
      this.minimum = parameters.minimum;
    }
    if (parameters.maximum !== undefined) {
      this.maximum = parameters.maximum;
    }
    if (parameters.defaultCapacity !== undefined) {
      this.defaultCapacity = parameters.defaultCapacity;
    }
    if (parameters.scaleType !== undefined) {
      this.scaleType = parameters.scaleType;
    }
  }    
}


/**
 * Validate the payload against the VirtualMachineScaleSetSkuCapacity schema
 *
 * @param {JSON} payload
 *
 */
VirtualMachineScaleSetSkuCapacity.prototype.serialize = function () {
  var payload = {};
  if (this['minimum'] !== null && this['minimum'] !== undefined) {
    if (typeof this['minimum'] !== 'number') {
      throw new Error('this[\'minimum\'] must be of type number.');
    }
    payload['minimum'] = this['minimum'];
  }

  if (this['maximum'] !== null && this['maximum'] !== undefined) {
    if (typeof this['maximum'] !== 'number') {
      throw new Error('this[\'maximum\'] must be of type number.');
    }
    payload['maximum'] = this['maximum'];
  }

  if (this['defaultCapacity'] !== null && this['defaultCapacity'] !== undefined) {
    if (typeof this['defaultCapacity'] !== 'number') {
      throw new Error('this[\'defaultCapacity\'] must be of type number.');
    }
    payload['defaultCapacity'] = this['defaultCapacity'];
  }

  if (this['scaleType'] !== null && this['scaleType'] !== undefined) {
    if (typeof this['scaleType'].valueOf() !== 'string') {
      throw new Error('this[\'scaleType\'] must be of type string.');
    }
    payload['scaleType'] = this['scaleType'];
  }

  return payload;
};

/**
 * Deserialize the instance to VirtualMachineScaleSetSkuCapacity schema
 *
 * @param {JSON} instance
 *
 */
VirtualMachineScaleSetSkuCapacity.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['minimum'] !== undefined) {
      this['minimum'] = instance['minimum'];
    }

    if (instance['maximum'] !== undefined) {
      this['maximum'] = instance['maximum'];
    }

    if (instance['defaultCapacity'] !== undefined) {
      this['defaultCapacity'] = instance['defaultCapacity'];
    }

    if (instance['scaleType'] !== undefined) {
      this['scaleType'] = instance['scaleType'];
    }
  }

  return this;
};

module.exports = VirtualMachineScaleSetSkuCapacity;
