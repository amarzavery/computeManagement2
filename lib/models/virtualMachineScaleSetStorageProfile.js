/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetStorageProfile class.
 * @constructor
 * Describes a virtual machine scale set storage profile.
 * @member {object} [imageReference] Gets or sets the image reference.
 * 
 * @member {string} [imageReference.publisher] Gets or sets the image
 * publisher.
 * 
 * @member {string} [imageReference.offer] Gets or sets the image offer.
 * 
 * @member {string} [imageReference.sku] Gets or sets the image sku.
 * 
 * @member {string} [imageReference.version] Gets or sets the image version.
 * The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and
 * Build being decimal numbers. Specify 'latest' to use the latest version of
 * image.
 * 
 * @member {object} [osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [osDisk.name] Gets or sets the disk name.
 * 
 * @member {string} [osDisk.caching] Gets or sets the caching type. Possible
 * values for this property include: 'None', 'ReadOnly', 'ReadWrite'.
 * 
 * @member {string} [osDisk.createOption] Gets or sets the create option.
 * Possible values for this property include: 'fromImage', 'empty', 'attach'.
 * 
 * @member {string} [osDisk.osType] Gets or sets the Operating System type.
 * Possible values for this property include: 'Windows', 'Linux'.
 * 
 * @member {object} [osDisk.image] Gets or sets the Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine.If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 * 
 * @member {string} [osDisk.image.uri] Gets or sets the virtual hard disk's
 * uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {array} [osDisk.vhdContainers] Gets or sets the list of virtual
 * hard disk container uris.
 * 
 */
function VirtualMachineScaleSetStorageProfile(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.imageReference) {
      this.imageReference = new models['ImageReference'](parameters.imageReference);
    }
    if (parameters.osDisk) {
      this.osDisk = new models['VirtualMachineScaleSetOSDisk'](parameters.osDisk);
    }
  }    
}


/**
 * Validate the payload against the VirtualMachineScaleSetStorageProfile schema
 *
 * @param {JSON} payload
 *
 */
VirtualMachineScaleSetStorageProfile.prototype.serialize = function () {
  var payload = {};
  if (this['imageReference']) {
    payload['imageReference'] = this['imageReference'].serialize();
  }

  if (this['osDisk']) {
    payload['osDisk'] = this['osDisk'].serialize();
  }

  return payload;
};

/**
 * Deserialize the instance to VirtualMachineScaleSetStorageProfile schema
 *
 * @param {JSON} instance
 *
 */
VirtualMachineScaleSetStorageProfile.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['imageReference']) {
      this['imageReference'] = new models['ImageReference']().deserialize(instance['imageReference']);
    }

    if (instance['osDisk']) {
      this['osDisk'] = new models['VirtualMachineScaleSetOSDisk']().deserialize(instance['osDisk']);
    }
  }

  return this;
};

module.exports = VirtualMachineScaleSetStorageProfile;
