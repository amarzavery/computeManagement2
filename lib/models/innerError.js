/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the InnerError class.
 * @constructor
 * Inner error details.
 * @member {string} [exceptiontype] Gets or sets the exception type.
 * 
 * @member {string} [errordetail] Gets or sets the internal error message or
 * exception dump.
 * 
 */
function InnerError(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.exceptiontype !== undefined) {
      this.exceptiontype = parameters.exceptiontype;
    }
    if (parameters.errordetail !== undefined) {
      this.errordetail = parameters.errordetail;
    }
  }    
}


/**
 * Validate the payload against the InnerError schema
 *
 * @param {JSON} payload
 *
 */
InnerError.prototype.serialize = function () {
  var payload = {};
  if (this['exceptiontype'] !== null && this['exceptiontype'] !== undefined) {
    if (typeof this['exceptiontype'].valueOf() !== 'string') {
      throw new Error('this[\'exceptiontype\'] must be of type string.');
    }
    payload['exceptiontype'] = this['exceptiontype'];
  }

  if (this['errordetail'] !== null && this['errordetail'] !== undefined) {
    if (typeof this['errordetail'].valueOf() !== 'string') {
      throw new Error('this[\'errordetail\'] must be of type string.');
    }
    payload['errordetail'] = this['errordetail'];
  }

  return payload;
};

/**
 * Deserialize the instance to InnerError schema
 *
 * @param {JSON} instance
 *
 */
InnerError.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['exceptiontype'] !== undefined) {
      this['exceptiontype'] = instance['exceptiontype'];
    }

    if (instance['errordetail'] !== undefined) {
      this['errordetail'] = instance['errordetail'];
    }
  }

  return this;
};

module.exports = InnerError;
